
import React, { useEffect, useState } from 'react'

import { useParams } from 'react-router-dom';
import axiosInstance from '../../axiosInstance';

function OneRecipe({recipes, setRecipes, user}) {
    const { id } = useParams();

    const [isShow, setIsShow] = useState(false);
    const [img, setImage] = useState("")
    const [servings, setServings] = useState("");
    const [readyInMinutes, setReadyInMinutes] = useState("");
    const [instructions, setInstructions] = useState("");
    const [title, setTitle] = useState("");
    const [oneRec, setOneRec] = useState([]);

    useEffect(() => {
      const selectedRecipe = recipes.find((el) => el.id === Number(id));
      if (selectedRecipe) {
        setOneRec(selectedRecipe);
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è –ø–æ–ª–µ–π —Ñ–æ—Ä–º—ã –ø—Ä–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
        setTitle(selectedRecipe.title);
        setImage(selectedRecipe.img);
        setServings(selectedRecipe.servings);
        setReadyInMinutes(selectedRecipe.readyInMinutes);
        setInstructions(selectedRecipe.instructions);
      }
    }, [id, recipes]);

  async function deleteHeandler(id) {
    const response = await axiosInstance.delete(`/recipes/${oneRec.id}`);
  
    
    if (response.status === 200) {
        setRecipes((prev) => prev.filter((el) => el.id !== id));
    }
  }

  async function updateHeandler(e) {
    e.preventDefault();
    const response = await axiosInstance.put(`/recipes/${oneRec.id}`, {
      title,
      img,
      servings,
      readyInMinutes,
      instructions
    });
    console.log(response);
    if (response.status === 200) {
        setRecipes((prev) =>
        prev.map((el) =>
          el.id === response.data.recipe.id
            ? response.data.recipe
            : el
        )
      );
      setIsShow(false);
    }
  }






  return (
    <div className='one-recipe'>

        <h2 id="title">  –û–ø–∏—Å–∞–Ω–∏–µ: {oneRec.title}</h2>
         <img src={oneRec.img} alt="" />
      <p id="serv">üçΩ  –ö–æ–ª–∏—á–µ—Å–≤–æ –ø–æ—Ä—Ü–∏–π: {oneRec.servings}</p>
      <p id="min">üïó  –í—Ä–µ–º—è –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è: {oneRec.readyInMinutes}</p>

      
      <p id="desc">  –û–ø–∏—Å–∞–Ω–∏–µ: {oneRec.instructions}</p>
      <button type="button" onClick={() => deleteHeandler(oneRec.id)}>
        –£–î–ê–õ–ò–¢–¨
      </button>
      <button type="button" onClick={() => setIsShow((prev) => !prev)}>
        –†–ï–î–ê–ö–¢–ò–†–û–í–ê–¢–¨
      </button>
     {isShow &&
    <form onSubmit={updateHeandler}>
      <label>
        –ù–∞–∑–≤–∞–Ω–∏–µ —Ä–µ—Ü–µ–ø—Ç–∞
        <input
          type="text"
          value={title}
          onChange={(e) => setTitle(e.target.value)}
          placeholder="–ù–∞–∑–≤–∞–Ω–∏–µ —Ä–µ—Ü–µ–ø—Ç–∞"
        />
      </label>
      <br />
      <label>
        –ö–∞—Ä—Ç–∏–Ω–∫–∞ –±–ª—é–¥–∞
        <input
          type="text"
          value={img}
          onChange={(e) => setImage(e.target.value)}
          placeholder="–°—Å—ã–ª–∫–∞ –Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫—É –±–ª—é–¥–∞"
        />
      </label>
      <br />
      <label>
        –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Ä—Ü–∏–π
        <input
          type="text"
          value={servings}
          onChange={(e) => setServings(e.target.value)}
          placeholder="–°–∫–æ–ª—å–∫–æ –ø–æ—Ä—Ü–∏–π"
        />
      </label>
      <br />
      <label>
        –í—Ä–µ–º—è –≥–æ—Ç–æ–≤–∫–∏ –≤ –º–∏–Ω—É—Ç–∞—Ö
        <input
          type="text"
          value={readyInMinutes}
          onChange={(e) => setReadyInMinutes(e.target.value)}
          placeholder="–í—Ä–µ–º—è –≥–æ—Ç–æ–≤–∫–∏"
        />
      </label>
      <br />
      <label>
        –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—é
        <input
          type="text"
          value={instructions}
          onChange={(e) => setInstructions(e.target.value)}
          placeholder="–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è"
        />
      </label>
      <button type="submit">–°–û–•–†–ê–ù–ò–¢–¨</button>
    </form>}
    </div>
  )
}

export default OneRecipe